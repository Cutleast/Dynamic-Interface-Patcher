[project]
name = "dynamic-interface-patcher"
version = "2.2.0-beta-1"
description = "Dynamic Interface Patcher"
readme = "README.md"
authors = [{ name = "Cutleast", email = "cutleast@gmail.com" }]
license = { file = "LICENSE" }
requires-python = ">=3.12"
dependencies = [
    "jstyleson",
    "lz4",
    "py7zr",
    "pydantic",
    "pyside6",
    "qtawesome",
    "qtpy",
    "rarfile",
    "sse-bsa",
    "virtual-glob",
]

[dependency-groups]
dev = [
    "cx-freeze",
    "nuitka",
    "pyinstaller",
    "pyinstaller-versionfile",
    "pyright",
    "pytest",
    "pytest-qt",
    "ruff",
    "semantic-version",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src", "tests"]
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "[%(asctime)s.%(msecs)03d][%(levelname)s][%(name)s.%(funcName)s]: %(message)s"

[tool.pyright]
include = ["src", "tests"]
typeCheckingMode = "standard"
exclude = ["**/__pycache__"]
stubPath = "./stubs"
extraPaths = ["./src"]

# Check here for a full list of options: https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-settings-defaults
deprecateTypingAliases = false
reportConstantRedefinition = true
reportDeprecated = "warning"
reportDuplicateImport = true
reportIncompleteStub = "warning"
reportIncompatibleMethodOverride = "warning"
reportInconsistentConstructor = "warning"
reportImplicitOverride = "warning"
reportInvalidStubStatement = "warning"
reportMatchNotExhaustive = false
reportMissingImports = "error"
reportMissingParameterType = "error"
reportMissingTypeArgument = false
reportMissingTypeStubs = false
reportPrivateUsage = "warning"
reportShadowedImports = "warning"
reportTypeCommentUsage = "information"
reportUnknownArgumentType = false
reportUnknownLambdaType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUnnecessaryCast = "information"
reportUnnecessaryComparison = "information"
reportUnnecessaryContains = "information"
reportUnnecessaryIsInstance = "information"
reportUnnecessaryTypeIgnoreComment = "information"
reportUnusedClass = "warning"
reportUnusedImport = "warning"
reportUnusedFunction = "warning"
reportUnusedVariable = "warning"
reportUntypedBaseClass = "error"
reportUntypedClassDecorator = "error"
reportUntypedFunctionDecorator = "error"
reportUntypedNamedTuple = "error"
reportWildcardImportFromLibrary = "warning"
strictDictionaryInference = true
strictListInference = true
strictSetInference = true
